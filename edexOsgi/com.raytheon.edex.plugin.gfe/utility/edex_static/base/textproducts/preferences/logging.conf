; Logging Configuration

; To enable file logging and modify the log format see the appropriate sections
; below.
;
; For a more detailed description of this configuration format see the logging
; module documentation in the Python Library Reference 14.5.10.2

; ---- Section Declarations ---------------------------------------------------

[loggers]
keys=root

[handlers]
keys=console,file

[formatters]
keys=console,file

; ---- Loggers ----------------------------------------------------------------

[logger_root]
level=DEBUG
handlers=console,file

; ---- Handlers ---------------------------------------------------------------

[handler_console]
class=StreamHandler
level=INFO
formatter=console
args=(sys.stdout,)

[handler_file]
class=StreamHandler
formatter=console
level=CRITICAL
args=(sys.stderr,)

; ---- Enable File Logging ----------------------------------------------------
;
; Uncomment the following lines to enable file logging.  The previous lines can
; remain uncommented as the following will simply override the values.
;
; args          replace 'program.log' with desired filename
;               replace 'w' with 'a' to append to the log file

;class=FileHandler
;level=DEBUG
;formatter=file
;args=('program.log','a')

; ---- Formatters -------------------------------------------------------------

; Configure the format of the console and file log
;
; %(name)s  	Name of the logger (logging channel).
; %(levelno)s 	Numeric logging level for the message 
;               (DEBUG, INFO, WARNING, ERROR, CRITICAL).
; %(levelname)s Text logging level for the message 
;               ('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL').
; %(pathname)s 	Full pathname of the source file where the logging call was 
;               issued (if available).
; %(filename)s 	Filename portion of pathname.
; %(module)s 	Module (name portion of filename).
; %(funcName)s 	Name of function containing the logging call.
; %(lineno)d 	Source line number where the logging call was issued 
;               (if available).
; %(created)f 	Time when the LogRecord was created 
;               (as returned by time.time()).
; %(relativeCreated)d
;               Time in milliseconds when the LogRecord was created, 
;               relative to the time the logging module was loaded.
; %(asctime)s 	Human-readable time when the LogRecord was created. By default 
;               this is of the form ``2003-07-08 16:49:45,896'' (the numbers 
;               after the comma are millisecond portion of the time).
; %(msecs)d 	Millisecond portion of the time when the LogRecord was created.
; %(thread)d 	Thread ID (if available).
; %(threadName)s
;               Thread name (if available).
; %(process)d 	Process ID (if available).
; %(message)s 	The logged message, computed as msg % args.

[formatter_file]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
datefmt=

[formatter_console]
format=%(name)s - %(levelname)s - %(message)s
datefmt=
