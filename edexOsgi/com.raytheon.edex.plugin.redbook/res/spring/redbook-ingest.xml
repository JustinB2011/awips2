<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd   
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<bean id="redbookDecoder" class="com.raytheon.edex.plugin.redbook.RedbookDecoder">
        <constructor-arg ref="redbookPluginName" />
    </bean>

	<bean id="redbookDistRegistry" factory-bean="distributionSrv"
		factory-method="register">
		<constructor-arg value="redbook" />
		<constructor-arg value="jms-dist:queue:Ingest.redbook?destinationResolver=#qpidDurableResolver" />
	</bean>

	<!-- 
    <bean id="redbookCamelRegistered" factory-bean="contextManager"
		factory-method="register" depends-on="persistCamelRegistered">
		<constructor-arg ref="clusteredRedbook-camel"/>
  	</bean>
  	-->
  	
  	<bean id="redbookCamelRegistered" factory-bean="clusteredCamelContextMgr"
		factory-method="register">
		<constructor-arg ref="clusteredRedbook-camel" />
  	</bean>

	<camelContext id="clusteredRedbook-camel"
		xmlns="http://camel.apache.org/schema/spring"
		errorHandlerRef="errorHandler"
		autoStartup="false">
		<!--
		<endpoint id="redbookFileEndpoint" uri="file:${edex.home}/data/sbn/redbook?noop=true&amp;idempotent=false" />

		<route id="redbookFileConsumerRoute">
			<from ref="redbookFileEndpoint" />
			<bean ref="fileToString"  />
			<setHeader headerName="pluginName">
				<constant>redbook</constant>
			</setHeader>
			<to uri="jms-generic:queue:Ingest.redbook" />
		</route>
		-->

		<!-- Begin Redbook routes -->
		<route id="redbookIngestRoute">
			<from uri="jms-generic:queue:Ingest.redbook?destinationResolver=#qpidDurableResolver" />
			<setHeader headerName="pluginName">
				<constant>redbook</constant>
			</setHeader>
			<doTry>
				<pipeline>
					<bean ref="stringToFile"  />
					<bean ref="redbookDecoder" method="decode" />
					<to uri="directvm:persistIndexAlert" />
				</pipeline>
				<doCatch>
					<exception>java.lang.Throwable</exception>
					<to uri="log:redbook?level=ERROR&amp;showBody=false&amp;showCaughtException=true&amp;showStackTrace=true"/>
				</doCatch>
			</doTry>
		</route>
	</camelContext>
</beans>