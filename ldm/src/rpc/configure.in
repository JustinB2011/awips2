AC_INIT(xdr.h)

AC_CONFIG_HEADERS(config.h)

AC_ARG_ENABLE(max-size,
    AC_HELP_STRING([--enable-max-size], 
	[maximize the (long, void*, off_t) programming environment]),
    max_size=$enableval,
    max_size=yes)

#AC_ARG_WITH(cc, dnl
#    --with-cc               user-specified C compiler, dnl
#    [CC="$withval"])
#AC_ARG_WITH(cppflags, dnl
#    --with-cppflags         additional, user-specified CPPFLAGS options, dnl
#    [CPPFLAGS="$withval"])
#AC_ARG_WITH(cflags, dnl
#    --with-cflags           additional, user-specified CFLAGS options, dnl
#    [CFLAGS="$withval"])
#AC_ARG_WITH(lintflags, dnl
#    --with-lintflags        additional, user-specified LINTFLAGS options, dnl
#    [LINTFLAGS="$withval"])

AC_DEFINE(_XOPEN_SOURCE, 500)

case "$CPPFLAGS" in
    *NDEBUG)	;;
    *)		CPPFLAGS="$CPPFLAGS${CPPFLAGS+ }-DNDEBUG";;
esac

CFLAGS=${CFLAGS-"-O"}

AC_PROG_CC(c89 cc gcc)
if test -z "$CC"; then
    AC_MSG_ERROR(no C compiler found)
else
    AC_MSG_CHECKING(the C compiler)
    AC_COMPILE_IFELSE([int foo;], 
	AC_MSG_RESULT(works),
	AC_MSG_FAILURE($CC failed to compile test code))
fi

if test "$GCC" != yes; then
    case "$CFLAGS" in
	-*g|-*O)	;;
	*)		CFLAGS="$CFLAGS${CFLAGS+ }-O";;
    esac
    case `uname` in 
	AIX) 
	    AC_MSG_CHECKING([use of option "-qmaxmem=4096"])
	    cflags=$CFLAGS
	    CFLAGS="-qmaxmem=4096 $CFLAGS"
	    AC_COMPILE_IFELSE([int foo;], 
		AC_MSG_RESULT(yes),
		[
		    AC_MSG_RESULT(no)
		    CFLAGS=$cflags
		])
	    ;; 
	IRIX*) 
	    AC_MSG_CHECKING([use of option "-woff 1204"])
	    cflags=$CFLAGS
	    CFLAGS="-woff 1204 $CFLAGS"
	    AC_COMPILE_IFELSE([int foo;], 
		AC_MSG_RESULT(yes),
		[
		    AC_MSG_RESULT(no)
		    CFLAGS=$cflags
		])
	    ;; 
    esac 
fi

ARFLAGS=-cru
if test "$max_size" = yes
then
    AC_MSG_NOTICE(Checking how to maximize the (long, void*, off_t) programming environment)
    success=no
    AC_MSG_CHECKING([if the system supports _XBS5_LPBIG_OFFBIG])
    avail=`getconf _XBS5_LPBIG_OFFBIG 2>/dev/null`
    if test $? = 0 -a "$avail" \!= -1 -a "$avail" \!= "undefined"
    then
	if cflags=`getconf XBS5_LPBIG_OFFBIG_CFLAGS 2>/dev/null`
	then
	    if ldflags=`getconf XBS5_LPBIG_OFFBIG_LDFLAGS 2>/dev/null`
	    then
		if libs=`getconf XBS5_LPBIG_OFFBIG_LIBS 2>/dev/null`
		then
		    maprgns=-U_MAPRGNS
		    success=yes
		fi
	    fi
	fi
    fi
    AC_MSG_RESULT($success)
    if test "$success" = no
    then
	AC_MSG_CHECKING([if the system supports _XBS5_LP64_OFF64])
	avail=`getconf _XBS5_LP64_OFF64 2>/dev/null`
	if test $? = 0 -a "$avail" \!= -1 -a "$avail" \!= "undefined"
	then
	    if cflags=`getconf XBS5_LP64_OFF64_CFLAGS 2>/dev/null`
	    then
		if ldflags=`getconf XBS5_LP64_OFF64_LDFLAGS 2>/dev/null`
		then
		    if libs=`getconf XBS5_LP64_OFF64_LIBS 2>/dev/null`
		    then
			maprgns=-U_MAPRGNS
			success=yes
		    fi
		fi
	    fi
	fi
	AC_MSG_RESULT($success)
    fi
    if test "$success" = no
    then
	AC_MSG_CHECKING([if the system supports _XBS5_ILP32_OFFBIG])
	avail=`getconf _XBS5_ILP32_OFFBIG 2>/dev/null`
	if test $? = 0 -a "$avail" \!= -1 -a "$avail" \!= "undefined"
	then
	    if cflags=`getconf XBS5_ILP32_OFFBIG_CFLAGS 2>/dev/null`
	    then
		if ldflags=`getconf XBS5_ILP32_OFFBIG_LDFLAGS 2>/dev/null`
		then
		    if libs=`getconf XBS5_ILP32_OFFBIG_LIBS 2>/dev/null`
		    then
			AC_DEFINE(_MAPRGNS, 1)
			maprgns=-D_MAPRGNS
			success=yes
		    fi
		fi
	    fi
	fi
	AC_MSG_RESULT($success)
    fi
    if test "$success" = yes
    then
	test -n "$cflags"  && CFLAGS="$CFLAGS${CFLAGS+ }$cflags"
	test -n "$ldflags" && LDFLAGS="$LDFLAGS${LDFLAGS+ }$ldflags"
	test -n "$libs"    && LIBS="$LIBS${LIBS+ }$libs"
	test `uname` = AIX && ARFLAGS='-cru -X 32_64'
	AC_MSG_NOTICE([$maprgns])
	AC_MSG_NOTICE([cflags=\"$cflags\"])
	AC_MSG_NOTICE([ldflags=\"$ldflags\"])
	AC_MSG_NOTICE([libs=\"$libs\"])
	AC_MSG_NOTICE([ARFLAGS=\"$ARFLAGS\"])
	AC_MSG_CHECKING([the C compiler (again)])
	AC_COMPILE_IFELSE([int foo;], 
	    AC_MSG_RESULT(works),
	    AC_MSG_FAILURE($CC failed to compile test code))
    fi
fi
AC_SUBST(ARFLAGS)

DEPEND_FLAG=-M
LINT=${LINT-lint}
LINTLIB=oncrpc
case `uname` in 
    AIX) 
	AC_DEFINE(_ALL_SOURCE, 1)
	;; 
    FreeBSD) 
	LINTFLAGS="-i $LINTFLAGS"
	LINTLIB=llib-loncrpc.ln
	AC_DEFINE(__BSD_VISIBLE, 1) 
	;; 
    HP-UX) 
	AC_DEFINE(_XOPEN_SOURCE_EXTENDED, 1)
	AC_DEFINE(_HPUX_SOURCE, 1) 
	;; 
    IRIX*) 
	AC_DEFINE(_BSD_TYPES, 1)
	;; 
    Linux) 
	AC_DEFINE(_XOPEN_SOURCE_EXTENDED, 1)
	AC_DEFINE(_BSD_SOURCE, 1) 
	;; 
    OSF1) 
	AC_DEFINE(_OSF_SOURCE, 1)
	;; 
    SunOS) 
	case `type "$CC"` in 
	    *SUNWspro*) 
		DEPEND_FLAG=-xM1 
		;; 
	esac 
	AC_DEFINE(__EXTENSIONS__, 1)
	;; 
esac 
AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(DEPEND_FLAG)
AC_SUBST(LINT)
AC_SUBST(LINTLIB)
AC_SUBST(LINTFLAGS)

AC_PROG_RANLIB()

AC_C_BIGENDIAN

AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(float)
AC_CHECK_SIZEOF(double)

AC_MSG_CHECKING([size of enum])
AC_TRY_RUN([
    #include <stdio.h>
    int main() {
	enum foo { bar };
	FILE* out = fopen("conftestdata", "w");
	(void)fprintf(out, "%lu\n", (unsigned long)sizeof(enum foo));
	exit(0);
    }],
    [
	SIZEOF_ENUM=`cat conftestdata`
	AC_MSG_RESULT($SIZEOF_ENUM)
	AC_DEFINE_UNQUOTED(SIZEOF_ENUM, $SIZEOF_ENUM)
    ],
    AC_MSG_FAILURE([couldn't run test program])
)

AC_MSG_CHECKING([size of gid_t])
AC_TRY_RUN([
    #include <stdio.h>
    #include <sys/types.h>
    int main() {
	FILE* out = fopen("conftestdata", "w");
	(void)fprintf(out, "%lu\n", (unsigned long)sizeof(gid_t));
	exit(0);
    }],
    [
	SIZEOF_GID_T=`cat conftestdata`
	AC_MSG_RESULT($SIZEOF_GID_T)
	AC_DEFINE_UNQUOTED(SIZEOF_GID_T, $SIZEOF_GID_T)
    ],
    AC_MSG_FAILURE([couldn't run test program])
)

AC_DEFINE(IEEE_FLOAT)
AC_DEFINE(IEEE_DOUBLE)

AC_CHECK_HEADERS([stropts.h], ,
[
    AC_CHECK_HEADERS([sys/ioctl.h], ,
	AC_MSG_ERROR("Missing necessary header-file"))
])
    
AC_OUTPUT(Makefile)
