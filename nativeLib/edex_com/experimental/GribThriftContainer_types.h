/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
#ifndef GribThriftContainer_TYPES_H
#define GribThriftContainer_TYPES_H

#include <Thrift.h>
#include <TApplicationException.h>
#include <protocol/TProtocol.h>
#include <transport/TTransport.h>
#include "GribThriftRecord_types.h"



typedef struct _com_raytheon_uf_common_dataplugin_grib_GribThriftContainer__isset {
  _com_raytheon_uf_common_dataplugin_grib_GribThriftContainer__isset() : numOfRecords(false), records(false) {}
  bool numOfRecords;
  bool records;
} _com_raytheon_uf_common_dataplugin_grib_GribThriftContainer__isset;

class com_raytheon_uf_common_dataplugin_grib_GribThriftContainer {
 public:

  static const char* ascii_fingerprint; // = "95D7C1CC242CB9967B6C72FA20597323";
  static const uint8_t binary_fingerprint[16]; // = {0x95,0xD7,0xC1,0xCC,0x24,0x2C,0xB9,0x96,0x7B,0x6C,0x72,0xFA,0x20,0x59,0x73,0x23};

  com_raytheon_uf_common_dataplugin_grib_GribThriftContainer() : numOfRecords(0) {
  }

  virtual ~com_raytheon_uf_common_dataplugin_grib_GribThriftContainer() throw() {}

  int32_t numOfRecords;
  std::vector<com_raytheon_uf_common_dataplugin_grib_GribThriftRecord>  records;

  _com_raytheon_uf_common_dataplugin_grib_GribThriftContainer__isset __isset;

  bool operator == (const com_raytheon_uf_common_dataplugin_grib_GribThriftContainer & rhs) const
  {
    if (!(numOfRecords == rhs.numOfRecords))
      return false;
    if (!(records == rhs.records))
      return false;
    return true;
  }
  bool operator != (const com_raytheon_uf_common_dataplugin_grib_GribThriftContainer &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const com_raytheon_uf_common_dataplugin_grib_GribThriftContainer & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};



#endif
