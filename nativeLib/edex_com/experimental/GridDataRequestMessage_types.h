/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
#ifndef GridDataRequestMessage_TYPES_H
#define GridDataRequestMessage_TYPES_H

#include <Thrift.h>
#include <TApplicationException.h>
#include <protocol/TProtocol.h>
#include <transport/TTransport.h>





typedef struct _com_raytheon_uf_common_dataplugin_grib_request_GridDataRequestMessage__isset {
  _com_raytheon_uf_common_dataplugin_grib_request_GridDataRequestMessage__isset() : forecastTime(false), levelOne(false), levelTwo(false), levelType(false), modelName(false), parameterAbbreviation(false), pert(false), startTime(false), version(false) {}
  bool forecastTime;
  bool levelOne;
  bool levelTwo;
  bool levelType;
  bool modelName;
  bool parameterAbbreviation;
  bool pert;
  bool startTime;
  bool version;
} _com_raytheon_uf_common_dataplugin_grib_request_GridDataRequestMessage__isset;

class com_raytheon_uf_common_dataplugin_grib_request_GridDataRequestMessage {
 public:

  static const char* ascii_fingerprint; // = "9929A2BAB7C3E6060F44C2DCEAE9AAB2";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x29,0xA2,0xBA,0xB7,0xC3,0xE6,0x06,0x0F,0x44,0xC2,0xDC,0xEA,0xE9,0xAA,0xB2};

  com_raytheon_uf_common_dataplugin_grib_request_GridDataRequestMessage() : forecastTime(0), levelOne(0), levelTwo(0), levelType(""), modelName(""), parameterAbbreviation(""), pert(0), startTime(0), version(0) {
  }

  virtual ~com_raytheon_uf_common_dataplugin_grib_request_GridDataRequestMessage() throw() {}

  int32_t forecastTime;
  double levelOne;
  double levelTwo;
  std::string levelType;
  std::string modelName;
  std::string parameterAbbreviation;
  int32_t pert;
  int64_t startTime;
  int32_t version;

  _com_raytheon_uf_common_dataplugin_grib_request_GridDataRequestMessage__isset __isset;

  bool operator == (const com_raytheon_uf_common_dataplugin_grib_request_GridDataRequestMessage & rhs) const
  {
    if (!(forecastTime == rhs.forecastTime))
      return false;
    if (!(levelOne == rhs.levelOne))
      return false;
    if (!(levelTwo == rhs.levelTwo))
      return false;
    if (!(levelType == rhs.levelType))
      return false;
    if (!(modelName == rhs.modelName))
      return false;
    if (!(parameterAbbreviation == rhs.parameterAbbreviation))
      return false;
    if (!(pert == rhs.pert))
      return false;
    if (!(startTime == rhs.startTime))
      return false;
    if (!(version == rhs.version))
      return false;
    return true;
  }
  bool operator != (const com_raytheon_uf_common_dataplugin_grib_request_GridDataRequestMessage &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const com_raytheon_uf_common_dataplugin_grib_request_GridDataRequestMessage & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};



#endif
