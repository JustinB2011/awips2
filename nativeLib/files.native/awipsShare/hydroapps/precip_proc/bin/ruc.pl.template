#!/usr/bin/perl -w
use File::Copy;


#  setup the grid
use AGRID;
my($file,$AGID,@temp,@hght);

#set file name
$file=$ARGV[0];
#print "file is $file\n";

$siteid=$ARGV[1];
$envsiteid=$ENV{"MPE_SITE_ID"};
#print "siteid=$siteid envsiteid=$envsiteid\n";
if ($siteid ne $envsiteid) {
   $sitefile=$ENV{"MPE_STATION_LIST_DIR"} . "/" . $siteid . "_station_list";
   #print "sitefile=$sitefile\n";
   open(STNS,$sitefile) ||
      die "Could not open ${siteid} station list file \n";
   @areastns=<STNS>;
   close(STNS);
   chomp(@areastns);
   $count = grep(/HZIRZZZ/,@areastns);
   #print "count=$count\n";
   if ($count == 0) { exit; }  # if there are no freezing stations in the file, exit
   
   #reinitialize so the values will be determined from the area station list file
   
   @lat=();
   @lon=();
   
   #return the list of freezing stations
      
   @frzstns = grep(/HZIRZZZ/,@areastns);
      
   foreach $fzstn(@frzstns) {
      @line=split(' ',$fzstn);
      $line[3]=(-1.0)*$line[3];
      #print "lat=$line[2] lon=$line[3]\n";
      push(@lat, $line[2]);
      push(@lon, $line[3]);
   }
   
   $count=$count-1;
}
else {
      
   $count=#####;   
      
}

$AGID=&AGRID::setup($file,0);
if ($AGID<0) { die &AGRID::geterrorstring; }
if (&AGRID::setupcoord($AGID)) { die &AGRID::geterrorstring; }


for ($i=0; $i<=count; $i++) {
	$lat = $lat[$i];
	$lon = $lon[$i];

    $fzlvl[$i]=-9;  #initially set to missing

	#get the temp and hght data at all levels
	if (&AGRID::getvertpointll($AGID,"t",0,$lat,$lon,1,\@temp)) { &AGRID::geterrorstring; next; }
	if (&AGRID::getvertpointll($AGID,"gh",0,$lat,$lon,1,\@hght)) { &AGRID::geterrorstring; next; }
	if (&AGRID::getlevs($AGID,"gh",\@ghlevels)) { &AGRID::geterrorstring; next; }
	if (&AGRID::getlevs($AGID,"t",\@tlevels)) { &AGRID::geterrorstring; next; }

	#get mb levels of all variables
	@mblevs=();
	&getmblevs(\@tlevels,\@mblevs);
	&getmblevs(\@ghlevels,\@mblevs);

	#loop over sorted levels
	
	$fzlvl[$i]=0;
	
	foreach $mb (sort(Numerically @mblevs)) {

		if (($j=&findmb($mb,\@tlevels))>=0) {
			if (($k=&findmb($mb,\@ghlevels))>=0) {
				#print "Hght & Temp at ",$mb,"\n";
				#print "j= ",$j,"\n";
				#print "k= ",$k,"\n";
				#print "hght= ",$hght[$k],"\n";
				#print "temp= ",$temp[$j],"\n";
				if ($hght[$k]>-9000) {
					if ($temp[$j]>273.16) {
						#print "jtop= ",$jtop,"\n";
						#print "ktop= ",$ktop,"\n";
						#print "hght at top= ",$hght[$ktop],"\n";
						#print "temp at top= ",$temp[$jtop],"\n";
						$fzlvl[$i] = ($hght[$ktop] -
							(($hght[$ktop] - $hght[$k]) *
							((273.16 - $temp[$jtop])/($temp[$j] -
							$temp[$jtop])))) *.00328; 
						$fzlvl[$i] = substr($fzlvl[$i], 0, 4);
						#print "fzlvl= ",$fzlvl[$i],"\n";
						last;
					} else {
						$jtop=$j;
						$ktop=$k;
					}
				}
			}
		}
	}
}

$j=0;
while ($j <= $count) {
	print "$fzlvl[$j]\n";
	$j++;
}

#find level index that has the specified MB value
sub findmb {
	my($mb,$Rlev)=@_;
	my($search,$j,$lev);

	$search=sprintf("MB %d",$mb);
	$j=0;
	foreach $lev (@$Rlev) {
		if ($lev eq $search) {
			return($j);
		}
		$j++;
	}
	return(-1);
}

#find any levels that contain the text MB at the beginning
sub getmblevs {
	my($Rlev,$Rmblev)=@_;
	my($lev,$mb);

	foreach $lev (@$Rlev) {
		if (!($lev=~/^MB (\d+)$/)) { next; }
		$mb=$1;
		if (grep(/$mb/,@$Rmblev)==0) { push(@$Rmblev,$mb); }
	}
	return;
}

sub Numerically { $a <=> $b }
