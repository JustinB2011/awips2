#! /bin/ksh
# whfs_editor - Launches a standalone editor from an application.
#
# The "dtpad" editor is invoked from the "HP" operating system.
# The "kwrite" editor is invoked from the "Linux" operating system.
#
# This script was modified to use a "hard-wired"
# editor based upon which operating system it is being run under.
# If the user wants to use an editor of their preference, then this
# script may be modified.  Alternatively, the token "whfs_editor:"
# can be set to use a different file in this local/bin directory.
#
# The script must recognize the following args from the command line.
#  Argument "0" is the command name.  
#  Argument "1" is the title to display across the top of the editor.
#  Argument "2" is the name of the file to be opened.
#  Argument "3" is the type of the file which is important 
#
# Note that this script has been created on the premise that it will be 
# launched from an application that has already had "set_hydro_env" sourced
# by a start script.  This script relies on set_hydro_env being sourced
# to set values for: "RPF_LINEWIDTH", "OS_SUFFIX", "WHFS_UTIL_LOG_DIR".
# If "OS_SUFFIX" is not set, then this script will issue an error message
# and exit with a return value of "1".
# If "RFC_LINEWIDTH" is not set, then it will default to a value of "80".
# If "WHFS_UTIL_LOG_DIR" is not set, then if the editor command is 
# logging to the file, the edit command will fail.
#
# modified 01/28/2002
# removed "-geometry" option when calling kwrite editor on Linux machines
# added error logging feature for kwrite
#
TITLE=$1
FILENAME=$2
FILETYPE=$3

LOGFILENAME=$WHFS_UTIL_LOG_DIR/whfs_editor.log

#
# This allows you to run this script from outside of ./local/bin
RUN_FROM_DIR=`dirname $0`

#
#  get line_limit value from the RPF_LINEWIDTH environmental variable.
if [[ -z "`echo $RPF_LINEWIDTH | tr -d ' /\t'`" ]]
then
  NUM_COLS="80"
else
  NUM_COLS=$RPF_LINEWIDTH
fi

BY="x"
NUM_LINES="30"
GEOMETRY=$NUM_COLS$BY$NUM_LINES

#---------------------------------
# 

#
# Is the OS_SUFFIX variable defined in the environment?
if [[ -z "`echo $OS_SUFFIX | tr -d ' /\t'`" ]]
then
   print "\nOS_SUFFIX is not defined.  This variable needs to be defined" 
   print "for the whfs_editor script to properly function.\n"
   exit 1
fi 

#
# Determine the operating system that this script is being run under.
if [[ $OS_SUFFIX = ".HP" ]]
then

   DTPAD_EDITOR=/usr/dt/bin/dtpad

   if [[ $FILETYPE = "OUP" ]]
   then
     echo $DTPAD_EDITOR -wrapToFit -geometry $GEOMETRY $FILENAME  -standAlone
     $DTPAD_EDITOR -wrapToFit -geometry $GEOMETRY $FILENAME -standAlone
   fi

   if [[ $FILETYPE = "NWR" ]]
   then
     echo $DTPAD_EDITOR -geometry $GEOMETRY $FILENAME  -standAlone
     $DTPAD_EDITOR -geometry $GEOMETRY $FILENAME -standAlone
   fi

   if [[ $FILETYPE = "SHEFENCODE" ]]
   then
     echo $DTPAD_EDITOR  $FILENAME  -standAlone
     $DTPAD_EDITOR $FILENAME -standAlone
   fi

   if [[ $FILETYPE = "" ]]
   then
     echo $DTPAD_EDITOR  $FILENAME  -standAlone
     $DTPAD_EDITOR $FILENAME -standAlone
   fi
   
   
# for the $KWRITE_EDITOR invocations, send any error output to a log file.

else
	if [ -e /usr/bin/kwrite ]; then
	   KWRITE_EDITOR=/usr/bin/kwrite
	else
		KWRITE_EDITOR=/usr/bin/gedit
	fi

   if [[ $FILETYPE = "OUP" ]]
   then
     echo "$KWRITE_EDITOR $FILENAME 2>$LOGFILENAME"
     $KWRITE_EDITOR $FILENAME 2>$LOGFILENAME
   fi

   if [[ $FILETYPE = "NWR" ]]
   then
     echo "$KWRITE_EDITOR $FILENAME 2>$LOGFILENAME"
     $KWRITE_EDITOR $FILENAME 2>$LOGFILENAME
   fi

   if [[ $FILETYPE = "SHEFENCODE" ]]
   then
     echo "$KWRITE_EDITOR $FILENAME 2>$LOGFILENAME"
     $KWRITE_EDITOR $FILENAME 2>$LOGFILENAME
   fi

   if [[ $FILETYPE = "" ]]
   then
     echo "$KWRITE_EDITOR $FILENAME 2>$LOGFILENAME"
     $KWRITE_EDITOR $FILENAME 2>$LOGFILENAME
   fi

fi
