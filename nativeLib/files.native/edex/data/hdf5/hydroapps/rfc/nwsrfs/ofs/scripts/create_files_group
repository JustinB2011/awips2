#!/bin/ksh
#==========================================================================
#  Create file directories for an OFS files group
#
USAGE="Usage: create_files_group group_name"
#
# The script create_files_group will create a new branch in the ofs files
# directory structure.  The command usage is:
#
#  create_files_group group_name
#
# The group_name parameter is required. The top-level of the files group branch
# is created directly under the "ofs_files" directory ("" indicating the use of
# a gad token).  The names of the sub-directories created under
# group_name held in the file ofs.files_dir.list in the "rfs_sys_dir" 
# directory.  All directories in the chain are tested for existence and are
# created if they don't exist.  
# Permissions are read for all users and write for the user and group.
#==========================================================================

if [[ -z $1 ]]
   then
      print $USAGE
      exit
   fi

# returns a fully resolved path
get_full_path() {
    cd "$1"
    echo $(pwd)
}

script_dir=$(get_full_path $(dirname $0))

. $script_dir/include_hydro_env.sh

print ' 'Creating OFS files directories for $1 group 
print '   'at `date -u +"%T %Z"` on `date -u +"%a %b %d %Y"`
print ""

# Now create the ofs groups as indicated in the "groups" files
#  First see if the directory above the fs5files needs to be created
#  then create the fs5files, shefdata, mods, and griddb directories

Files_dir=$(gad ofs_files)
List_dir=$(gad rfs_sys_dir)
List_file=$List_dir/ofs.files_dir.list

print " Check to create: $Files_dir"

if [[ ! -a $Files_dir ]]
  then
    mkdir $Files_dir
    chmod ug+rw $Files_dir
    print "  Directory $Files_dir created."
  fi

Grp_dir=$Files_dir/$1
print ""
print "  Check to create: $Grp_dir"

if [[ ! -a $Grp_dir ]]
  then
    mkdir $Grp_dir
    chmod ug+rwx $Grp_dir
    print "   Directory $Grp_dir created."
  fi
if [[ -a $List_dir && -d $List_dir && -a $List_file ]]
  then
    while read -r sub_dir_name
      do
	print "   Check to create: $Grp_dir/$sub_dir_name"

	if [[ ! -a $Grp_dir/$sub_dir_name ]]
	  then
	    mkdir $Grp_dir/$sub_dir_name
	    chmod ug+rwx $Grp_dir/$sub_dir_name
	    print "    Directory $Grp_dir/$sub_dir_name created."
            if [[ $sub_dir_name = dhmdata ]]
              then
                mkdir $Grp_dir/$sub_dir_name/parameters
                chmod ug+rwx $Grp_dir/$sub_dir_name/parameters
                print "    Directory $Grp_dir/$sub_dir_name/parameters created."
                mkdir $Grp_dir/$sub_dir_name/states
                chmod ug+rwx $Grp_dir/$sub_dir_name/states
                print "    Directory $Grp_dir/$sub_dir_name/states created."
                mkdir $Grp_dir/$sub_dir_name/pet
                chmod ug+rwx $Grp_dir/$sub_dir_name/pet
                print "    Directory $Grp_dir/$sub_dir_name/pet created."
                mkdir $Grp_dir/$sub_dir_name/channelflow
                chmod ug+rwx $Grp_dir/$sub_dir_name/channelflow
                print "    Directory $Grp_dir/$sub_dir_name/channelflow created."
              fi
	  fi
      done < $List_file
  fi

return
