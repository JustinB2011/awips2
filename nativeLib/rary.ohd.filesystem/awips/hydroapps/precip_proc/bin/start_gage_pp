#!/bin/ksh
# ==============================================================
#  start_gage_pp - script to start up the Gage Precip Processor
#
#  This script will return one of the following completion codes
#  to the operating system indicating success or failure of its attempt
#  to start the Gage Precip Processor program:
#  
#   0     The attempt to start Gage Precip Processor was successful.
#   1     An invalid argument was passed to this script.
#   2     The gage_pp_userid token is not defined.
#   3     The user does not have permission to start Gage Precip Processor.
#   4     The directory specified for data files does not exist.
#   5     The directory specified for the log files does not exist.
#   6     The directory specified for the error files does not exist.
#   7     The directory specified for the executables does not exist. 
#   8     The Gage Precip Processor is already running.
#   9     The Gage Precip Processor is not allowed to run on this system.
#         Check the gage_pp_host token for the valid system name.
#  10     The gage_pp_enable token is off. There will be no data for gage_pp
#         to process.  Gage_pp will not be started.
#
#   Revision History
#   Moria Shebsovich      July 2, 2004    Created.
# 
# =================================================================

# This allows you to call this script from outside of ./bin
RUN_FROM_DIR=`dirname $0`
HOSTNAME=`hostname`

#
# set up SOME environment variables for AWIPS Team applications
. $RUN_FROM_DIR/../../set_hydro_env
export GAGE_PP_USERID=$(get_apps_defaults gage_pp_userid)
export GAGE_PP_HOST=$(get_apps_defaults gage_pp_host)
export GAGE_PP_ENABLE=$(get_apps_defaults gage_pp_enable)
export GAGE_PP_DATA=$(get_apps_defaults gage_pp_data)
export GAGE_PP_LOG=$(get_apps_defaults gage_pp_log)
export PPROC_BIN=$(get_apps_defaults pproc_bin)

GAGE_PP_LOGDIR=$GAGE_PP_LOG 

if [[ ! -d $GAGE_PP_LOGDIR ]]
  then
    print "start_gage_pp: Directory specified for log files does not " \
          "exist " $GAGE_PP_LOGDIR
    exit 5 
fi

#
# define the gage_pp daily log file name
LOGFILE=`date +gage_pp_log_%m%d`
GAGE_PP_LOGFILE=$GAGE_PP_LOGDIR/$LOGFILE

# Check to make sure that the gage_pp_enable token is set to ON.
if [[ $GAGE_PP_ENABLE != "ON" ]]
then

   print "gage_pp_enable token must be set to 'ON'. Gage Precip Processor" \
         "not started." | tee -a $GAGE_PP_LOGFILE
   exit 10
fi

# Check which system the Gage Precip Processor is allowed to run on.
# This is specified by the gage_pp_host token which is represented
# by the GAGE_PP_HOST variable set in set_hydro_env.
# If this script is not being run on that system, then log an error message.

COMPARISON_STRING=`echo $HOSTNAME $GAGE_PP_HOST | awk -F' ' 'match ($1, $2)'`

if test -z "$COMPARISON_STRING"
then

   print "Gage Precip Processor cannot be started on '$HOSTNAME'" \
         "It can only be started from '$GAGE_PP_HOST'." >> $GAGE_PP_LOGFILE
   exit 9
fi

# First check to see if the user trying to start process is the one 
# allowed to do it
if [[ $GAGE_PP_USERID = "" ]]
   then
     print start_gage_pp: User allowed to start Gage Precip Processor \ 
           has not been assigned. >> $GAGE_PP_LOGFILE
     print " "Please assign a user id to the 'gage_pp_userid' >> $GAGE_PP_LOGFILE
     print " "token for the get_apps_defaults process. >> $GAGE_PP_LOGFILE
     exit 2
fi

if [ $LOGNAME != $GAGE_PP_USERID ]
   then
     print start_gage_pp: User $LOGNAME is not allowed to start \
           Gage Precip Processor. >> $GAGE_PP_LOGFILE
     print " "Only user $GAGE_PP_USERID can start Gage Precip Processor! >> $GAGE_PP_LOGFILE
     exit 3
fi

#
#  get the directory specifications

 GAGEPPDATA=$GAGE_PP_DATA
 GAGEPPBIN=$PPROC_BIN

#
# Check to see if Gage Precip Processor data, log, and error directories exists

 if [[ ! -d $GAGEPPDATA ]]
   then
     print "start_gage_pp: Directory specified for data files does not " \
           "exist " $GAGEPPDATA >> $GAGE_PP_LOGFILE
     exit 4 
   fi


 if [[ ! -d $GAGEPPBIN ]]
   then
     print "start_gage_pp: Directory specified for executables does not " \
           "exist " $GAGEPPBIN >> $GAGE_PP_LOGFILE
     exit 7 
   fi
   
# Check if there is an instance of the Gage Precip Processor already running
# for this input data directory, and on this machine
# first, get the pid of the most recent run of the gage_pp 
# for this input data directory

export DUPSTART_LOGFILE=$GAGE_PP_LOGDIR/duplicate_start.log  

export PIDFILE=$GAGEPPDATA/gage_pp_pid.dat
export FILEPID=`cat $PIDFILE`

if [[ $FILEPID  != "" ]]
then
  if ps -p $FILEPID | grep gage_pp > /dev/null 2>&1 
  then
        print "***********************************************" >> $DUPSTART_LOGFILE 
  	print "Gage Precip Processor ALREADY running (pid $FILEPID)."  >> $DUPSTART_LOGFILE        
  	print "Additional run prevented. $(date -u) "       >> $DUPSTART_LOGFILE         
  	print "  " >> $DUPSTART_LOGFILE
  	
  	exit 8
  fi
fi


# Announce startup of gage_pp 

print =====================================================================  >> $GAGE_PP_LOGFILE
print Starting gage_pp$OS_SUFFIX as $LOGNAME at $(date -u +"%T %Z") on \
	   $(date -u +"%a %b %d %Y") on $HOSTNAME  >> $GAGE_PP_LOGFILE
print =====================================================================  >> $GAGE_PP_LOGFILE
print "   "  >> $GAGE_PP_LOGFILE


# Remove stop flag file if it exists

  rm -f $GAGEPPDATA/stop_gage_pp    

# Start program in background
# Redirect standard input and output to /dev/null so that 
# gage_pp.OS does not hang up when called from ssh.
 $GAGEPPBIN/gage_pp$OS_SUFFIX < /dev/null > /dev/null 2>&1 &

 exit 0
