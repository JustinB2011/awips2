diff -uNr ldm-6.8.1/src/pqact/filel.c ldm-6.8.1-patch0/src/pqact/filel.c
--- ldm-6.8.1/src/pqact/filel.c	2008-09-17 11:35:18.000000000 -0500
+++ ldm-6.8.1-patch0/src/pqact/filel.c	2011-02-22 12:31:58.000000000 -0600
@@ -15,6 +15,7 @@
 #define PATH_MAX 255                    /* _POSIX_PATH_MAX */
 #endif /* !PATH_MAX */
 #include <sys/types.h>
+#include <sys/sem.h>                                          
 #include <sys/stat.h>
 #include <fcntl.h> /* O_RDONLY et al */
 #include <unistd.h> /* access, lseek */
@@ -44,6 +45,13 @@
 extern pqueue*  pq;
 
 static unsigned maxEntries = 0;
+static int shared_id = -1;
+static int sem_id = -1;
+static unsigned shared_size;
+static unsigned queue_counter = 0;
+static unsigned largest_queue_element = 0;
+static union semun semarg;
+
 
 /*
  * Defined in pqcat.c
@@ -524,6 +532,9 @@
         }
         else if (0 == strncmp(*av,"-log",4)) {
             entry->flags |= FL_LOG;
+	}
+	else if (0 == strncmp(*av,"-edex",3)) {
+            entry->flags |= FL_EDEX;
         }
     }
 
@@ -707,6 +718,19 @@
                 : entry->handle.fd , prodp->info.ident);
 
     if (entry != NULL) {
+        if(entry->flags & FL_EDEX) {
+            if(shared_id == -1) {
+                uerror("Notification specified but shared memory is not available.");
+            }
+            else {
+                edex_message * queue = (edex_message *)shmat(shared_id, (void *)0, 0);
+                strncpy(queue[queue_counter].filename, entry->path, 4096);
+                strncpy(queue[queue_counter].ident, prodp->info.ident, 256);
+                if(shmdt(queue) == -1) {
+                    uerror("Detaching shared memory failed.");
+                }
+            }
+        }
         size_t  sz = prodp->info.sz;
         void*   data = 
             (entry->flags & FL_STRIP)
@@ -734,11 +758,23 @@
 
                 status = atFinishedArgs(argc, argv, entry);
 
-                if ((status == 0) && (entry->flags & FL_LOG))
+/*                if ((status == 0) && (entry->flags & FL_LOG))
                     unotice("Filed in \"%s\": %s",
                         argv[argc-1],
                         s_prod_info(NULL, 0, &prodp->info, ulogIsDebug()));
             }                       /* data written */
+                if (status == 0) {
+                    if(entry->flags & FL_LOG)
+                        unotice("Filed in \"%s\": %s",
+                            argv[argc-1],
+                            s_prod_info(NULL, 0, &prodp->info, ulogIsDebug()));
+                    if(entry->flags & FL_EDEX && shared_id != -1) {
+                        semarg.val = queue_counter;
+                        int semreturn = semctl(sem_id, 1, SETVAL, semarg);
+                        queue_counter = (queue_counter == largest_queue_element) ? queue_counter = 0 : queue_counter + 1;
+                    }
+                }
+            } 
 
             if (data != prodp->data)
                 free(data);
@@ -2289,6 +2325,30 @@
     return error;
 }
 
+int
+set_shared_space(
+    int shid,
+    int semid,
+    unsigned size)
+{
+    int error;
+    if(shid == -1 || semid == -1) {
+        uerror("Shared memory is not available.  Notification system disabled.");
+        error = -1;
+    }
+    else {
+        shared_id = shid;
+        sem_id = semid;
+        shared_size = size;
+        semarg.val = size;
+        semctl(sem_id, 0, SETVAL, semarg);
+        semarg.val = -1;
+        semctl(sem_id, 1, SETVAL, semarg);                    
+        largest_queue_element = shared_size - 1;
+        error = 0;
+    }
+    return error;
+}
 
 /*
  * Returns the maximum number of file-descriptors that one process can have 
diff -uNr ldm-6.8.1/src/pqact/filel.h ldm-6.8.1-patch0/src/pqact/filel.h
--- ldm-6.8.1/src/pqact/filel.h	2008-09-17 11:35:45.000000000 -0500
+++ ldm-6.8.1-patch0/src/pqact/filel.h	2011-02-22 12:16:40.000000000 -0600
@@ -19,6 +19,7 @@
 #define FL_LOG 64
 #define FL_METADATA 128	/* write data-product metadata */
 #define FL_NODATA 256 /* don't write data */
+#define FL_EDEX 512 /* send message to memory segment */
 
 #ifdef __cplusplus
 extern "C" {
@@ -44,8 +45,23 @@
 extern void fl_close_all(void);
 extern void endpriv(void);
 extern int set_avail_fd_count(unsigned fdCount);
+extern int set_shared_space(int shid, int semid, unsigned size);
 extern long openMax();
 
+struct edex_message {
+  char filename[4096];
+  char ident[256];
+};
+typedef struct edex_message edex_message;
+
+union semun {
+    int              val;    /* Value for SETVAL */
+    struct semid_ds *buf;    /* Buffer for IPC_STAT, IPC_SET */
+    unsigned short  *array;  /* Array for GETALL, SETALL */
+    struct seminfo  *__buf;  /* Buffer for IPC_INFO
+                                (Linux specific) */
+};
+
 #ifdef __cplusplus
 }
 #endif
diff -uNr ldm-6.8.1/src/pqact/pqact.c ldm-6.8.1-patch0/src/pqact/pqact.c
--- ldm-6.8.1/src/pqact/pqact.c	2008-09-04 15:09:52.000000000 -0500
+++ ldm-6.8.1-patch0/src/pqact/pqact.c	2011-02-22 12:39:21.000000000 -0600
@@ -20,6 +20,9 @@
 #include <sys/time.h>
 #include <sys/types.h>
 #include <regex.h>
+#include <sys/types.h>
+#include <sys/ipc.h>
+#include <sys/sem.h>
 #ifndef NO_WAITPID
 #include <sys/wait.h>
 #endif 
@@ -44,7 +47,10 @@
 
 static volatile int     hupped = 0;
 static char*            conffilename = 0;
-
+static int              shmid = -1;
+static int              semid = -1;
+static key_t            key;
+static key_t            semkey;
 timestampt              oldestCursor;
 timestampt              currentCursor;
 int                     currentCursorSet = 0;
@@ -104,6 +110,15 @@
             /*EMPTY*/;
     }
 
+    if(shmid != -1) {
+        unotice("Deleting shared segment.");
+        shmctl(shmid, IPC_RMID, NULL);
+    }
+    if(semid != -1) {
+        semctl(semid, 0, IPC_RMID);
+    }
+
+
     (void)closeulog();
 }
 
@@ -203,6 +218,8 @@
         (void)fprintf(stderr,
                 "\t-d datadir   cd to \"datadir\" before interpreting filenames in\n");
         (void)fprintf(stderr,
+                "\t-e EDEX! \n");
+        (void)fprintf(stderr,
                 "\t             conffile (default %s)\n",
                 DEFAULT_DATADIR);
         (void)fprintf(stderr,
@@ -237,6 +254,7 @@
         prod_class_t clss;
         int toffset = TOFFSET_NONE;
         int loggingToStdErr = 0;
+        unsigned queue_size = 5000;
 
         conffilename = DEFAULT_CONFFILENAME;
 
@@ -278,7 +296,7 @@
 
         opterr = 1;
 
-        while ((ch = getopt(ac, av, "vxl:d:f:q:o:p:i:t:")) != EOF)
+        while ((ch = getopt(ac, av, "vxel:d:f:q:o:p:i:t:")) != EOF)
                 switch (ch) {
                 case 'v':
                         logmask |= LOG_UPTO(LOG_INFO);
@@ -286,6 +304,12 @@
                 case 'x':
                         logmask |= LOG_MASK(LOG_DEBUG);
                         break;
+                case 'e':
+                        key = ftok("/etc/rc.d/rc.local",'R');
+                        semkey = ftok("/etc/rc.d/rc.local",'e');
+                        shmid = shmget(key, sizeof(edex_message) * queue_size, 0666 | IPC_CREAT);
+                        semid = semget(semkey, 2, 0666 | IPC_CREAT);
+                        break;
                 case 'l':
                         logfname = optarg;
                         break;
@@ -421,6 +445,14 @@
         }
 
         /*
+         * Inform the "filel" module of the shared memory segment
+         */
+        if (shmid != -1 && semid != -1)
+        {
+            set_shared_space(shmid, semid, queue_size);
+        }
+
+        /*
          * Compile the pattern.
          */
         if (re_isPathological(spec.pattern))
