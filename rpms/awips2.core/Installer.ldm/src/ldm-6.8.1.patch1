diff -uNr ldm-6.8.1/src/pqact/filel.c ldm-6.8.1.patch1-dir/src/pqact/filel.c
--- ldm-6.8.1/src/pqact/filel.c	2011-03-15 19:37:31.000000000 -0500
+++ ldm-6.8.1.patch1-dir/src/pqact/filel.c	2011-03-15 19:42:54.000000000 -0500
@@ -51,8 +51,6 @@
 static unsigned queue_counter = 0;
 static unsigned largest_queue_element = 0;
 static union semun semarg;
-
-
 /*
  * Defined in pqcat.c
  */
@@ -584,7 +582,7 @@
             strncpy(entry->path, path, PATH_MAX);
             entry->path[PATH_MAX-1] = 0; /* just in case */
 
-            udebug("    unio_open: %d", entry->handle.fd);
+            udebug("    unio_open: %d %s", entry->handle.fd, entry->path);
         }                               /* output-file set to close_on_exec */
 
         if (error) {
@@ -712,10 +710,10 @@
     int         status = -1;            /* failure */
     fl_entry*   entry = get_fl_entry(UNIXIO, argc, argv);
 
-    udebug("    unio_prodput: %d %s",
+    udebug("    unio_prodput: %d",
             entry == NULL
                 ? -1
-                : entry->handle.fd , prodp->info.ident);
+                : entry->handle.fd);
 
     if (entry != NULL) {
         if(entry->flags & FL_EDEX) {
@@ -751,7 +749,6 @@
             }
 
             status = unio_put(entry, prodp->info.ident, data, sz);
-
             if (status == 0) {
                 if (entry->flags & FL_OVERWRITE)
                     (void)ftruncate(entry->handle.fd, sz);
@@ -774,13 +771,13 @@
                         queue_counter = (queue_counter == largest_queue_element) ? queue_counter = 0 : queue_counter + 1;
                     }
                 }
-            } 
+            } /* data written */
 
             if (data != prodp->data)
                 free(data);
         }                               /* data != NULL */
     }                                   /* entry != NULL */
-
+    udebug("    unio_prodput: complete for %s at location %s", prodp->info.ident, entry->path);
     return status;
 }
 
diff -uNr ldm-6.8.1/src/pqact/palt.c ldm-6.8.1.patch1-dir/src/pqact/palt.c
--- ldm-6.8.1/src/pqact/palt.c	2009-01-06 14:44:09.000000000 -0600
+++ ldm-6.8.1.patch1-dir/src/pqact/palt.c	2011-03-16 09:21:01.000000000 -0500
@@ -552,6 +552,54 @@
     return epochTime;
 }
 
+static void
+seq_sub(
+   const char* istring,        /* input string, possibly including
+                                  indicators to be expanded */
+   char*       ostring,        /* output string, with date indicators
+                                  expanded */
+   u_int       seqnum)     /* UTC-based product-time (might be "now") */
+{
+   static int          seqfirst = 1;      /* true only first time called */
+   static regex_t      seqprog;           /* compiled regexp for date indicator */
+   static regmatch_t   seqpmatch[1];      /* substring matching information */
+   const char*         e2;             /* pointer to last character of seq
+                                        * indicator substring */
+   const char*         is;             /* pointer to next input character */
+   /*
+    * Compile regular-expression on first call.
+    */
+   if (seqfirst) {
+      static char     seq_exp[] = "\\(seq\\)";
+
+      if (regcomp(&seqprog, seq_exp, REG_EXTENDED) != 0)
+         serror("Bad regular expression or out of memory: %s", seq_exp);
+      seqfirst = 0;
+   }
+
+   for (is = istring; regexec(&seqprog, is, 1, seqpmatch, 0) == 0; is = e2) {
+      /*
+       * Process the next date indicator in "istring".
+       */
+      printf("%d, %d\n", seqpmatch[0].rm_so, seqpmatch[0].rm_eo);
+      const char *const       s0 = &is[seqpmatch[0].rm_so];
+                                      /* start of entire substring match */
+
+      e2 = &is[seqpmatch[0].rm_eo];      /* points to last char of substring */
+
+      /*
+       * Copy stuff before match.
+       */
+      {
+         while (is < s0)
+            *ostring++ = *is++;
+      }
+
+      int printed =  sprintf(ostring, "%d", seqnum);
+      ostring+=printed;
+   }
+   (void)strcpy(ostring, is);          /* copy rest of input to output */
+}
 
 /*
         from  ldm3/dd_regexp.c,v 1.24 1991/03/02 17:32:08
@@ -1005,6 +1053,7 @@
 
     date_sub("(02:yyyy)-(02:mm)-(02:dd)", buf, may31);
     assert(strcmp(buf, "2007-05-02") == 0);
+    seq_sub("/tmp/(seq).txt", buf, 1234);
 
     exit(0);
 }
@@ -1110,8 +1159,11 @@
         date_sub(buf2, buf1, prod->info.arrival.tv_sec);
         buf1[sizeof(buf1)-1] = 0;
 
+        seq_sub(buf2, buf1, prod->info.seqno);
+        buf1[sizeof(buf1) -1] = 0;
+
         if (ulogIsVerbose())
-            uinfo("               %s: %s", s_actiont(&pal->action), buf1);
+            uinfo("               %s: %s and the ident is %s", s_actiont(&pal->action), buf1, prod->info.ident);
 
         argc = tokenize(buf1, argv, ARRAYLEN(argv));
 
diff -uNr ldm-6.8.1/src/pqact/pqact.c ldm-6.8.1.patch1-dir/src/pqact/pqact.c
--- ldm-6.8.1/src/pqact/pqact.c	2011-03-15 19:37:31.000000000 -0500
+++ ldm-6.8.1.patch1-dir/src/pqact/pqact.c	2011-03-15 19:44:56.000000000 -0500
@@ -118,7 +118,6 @@
         semctl(semid, 0, IPC_RMID);
     }
 
-
     (void)closeulog();
 }
 
@@ -218,8 +217,6 @@
         (void)fprintf(stderr,
                 "\t-d datadir   cd to \"datadir\" before interpreting filenames in\n");
         (void)fprintf(stderr,
-                "\t-e EDEX! \n");
-        (void)fprintf(stderr,
                 "\t             conffile (default %s)\n",
                 DEFAULT_DATADIR);
         (void)fprintf(stderr,
@@ -289,6 +286,7 @@
         extern int optind;
         extern int opterr;
         extern char *optarg;
+
         int ch;
         int logmask = (LOG_MASK(LOG_ERR) | LOG_MASK(LOG_WARNING) |
             LOG_MASK(LOG_NOTICE));
