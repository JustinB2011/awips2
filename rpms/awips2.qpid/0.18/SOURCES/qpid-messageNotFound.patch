diff -crB a/qpid-0.18/java/broker/src/main/java/org/apache/qpid/server/queue/QueueEntryImpl.java b/qpid-0.18/java/broker/src/main/java/org/apache/qpid/server/queue/QueueEntryImpl.java
*** a/qpid-0.18/java/broker/src/main/java/org/apache/qpid/server/queue/QueueEntryImpl.java	2012-06-28 11:46:12.000000000 -0500
--- b/qpid-0.18/java/broker/src/main/java/org/apache/qpid/server/queue/QueueEntryImpl.java	2013-09-16 13:26:48.000000000 -0500
***************
*** 38,47 ****
  import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
  import java.util.concurrent.atomic.AtomicLongFieldUpdater;
  import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
  
  public abstract class QueueEntryImpl implements QueueEntry
  {
!     private static final Logger _log = Logger.getLogger(QueueEntryImpl.class);
  
      private final QueueEntryList _queueEntryList;
  
--- 38,48 ----
  import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
  import java.util.concurrent.atomic.AtomicLongFieldUpdater;
  import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;
+ import java.util.logging.Level;
  
  public abstract class QueueEntryImpl implements QueueEntry
  {
!     private static final java.util.logging.Logger _log = java.util.logging.Logger.getLogger(QueueEntryImpl.class.getName());
  
      private final QueueEntryList _queueEntryList;
  
***************
*** 145,156 ****
          ServerMessage message = getMessage();
          if(message != null)
          {
!             long expiration = message.getExpiration();
!             if (expiration != 0L)
!             {
!                 long now = System.currentTimeMillis();
  
!                 return (now > expiration);
              }
          }
          return false;
--- 146,162 ----
          ServerMessage message = getMessage();
          if(message != null)
          {
!             try {
!                 long expiration = message.getExpiration();
!                 if (expiration != 0L)
!                 {
!                     long now = System.currentTimeMillis();
  
!                     return (now > expiration);
!                 }
!             } catch (Exception e) {
!                 _log.log(Level.SEVERE, "Caught exception checking if message is expired.  Message State: " + _state.getState().name(), e);
!                 return isAvailable();
              }
          }
          return false;
***************
*** 343,349 ****
          }
          else
          {
!             _log.warn("Requesting rejection by null subscriber:" + this);
          }
      }
  
--- 349,355 ----
          }
          else
          {
!             _log.warning("Requesting rejection by null subscriber:" + this);
          }
      }
  
diff -crB a/qpid-0.18/java/broker/src/main/java/org/apache/qpid/server/queue/SimpleAMQQueue.java b/qpid-0.18/java/broker/src/main/java/org/apache/qpid/server/queue/SimpleAMQQueue.java
*** a/qpid-0.18/java/broker/src/main/java/org/apache/qpid/server/queue/SimpleAMQQueue.java	2012-07-08 10:30:05.000000000 -0500
--- b/qpid-0.18/java/broker/src/main/java/org/apache/qpid/server/queue/SimpleAMQQueue.java	2013-09-16 14:15:11.000000000 -0500
***************
*** 36,41 ****
--- 36,42 ----
  import java.util.concurrent.atomic.AtomicLong;
  
  import org.apache.log4j.Logger;
+ import org.apache.log4j.Level;
  import org.apache.qpid.AMQException;
  import org.apache.qpid.AMQSecurityException;
  import org.apache.qpid.framing.AMQShortString;
***************
*** 1053,1060 ****
  
      public long getOldestMessageArrivalTime()
      {
!         QueueEntry entry = getOldestQueueEntry();
!         return entry == null ? Long.MAX_VALUE : entry.getMessage().getArrivalTime();
      }
  
      protected QueueEntry getOldestQueueEntry()
--- 1054,1090 ----
  
      public long getOldestMessageArrivalTime()
      {
!         int tries = 0;
!         QueueEntry prev = null;
! 
!         while (tries < 3) {
!             QueueEntry entry = null;
!             try {
!                 entry = getOldestQueueEntry();
!                 return entry == null ? Long.MAX_VALUE : entry.getMessage().getArrivalTime();
!             } catch (Exception e) {
!                 if ((prev == null) || (prev != entry)) {
!                     tries++;
!                     _logger.log(Level.FATAL,
!                             "Error occurred getting oldest message arrival time, message: "
!                                     + entry + ", attempt " + tries + " of 3", e);
!                     prev = entry;
!                 } else {
!                     // same invalid entry returned, try deleting?
!                     _logger.log(Level.WARN,
!                             "Received same invalid entry on getting oldest message, attempting discard.");
!                     try {
!                         entry.discard();
!                     } catch (Exception e2) {
!                         _logger.log(Level.ERROR,
!                                 "Failed to discard message.  Restart recommended if errors continue", e2);
!                     }
!                 }
!             }
!         }
! 
! 	// default case
! 	return Long.MAX_VALUE;
      }
  
      protected QueueEntry getOldestQueueEntry()
